<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Jayinnn's Blog</title><link>https://blog.jayinnn.dev/posts/</link><description>Recent content in Posts on Jayinnn's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>Jayinnn © CC BY-NC-SA 4.0</copyright><lastBuildDate>Fri, 31 Oct 2025 23:50:42 +0800</lastBuildDate><atom:link href="https://blog.jayinnn.dev/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>ETH 交換心得</title><link>https://blog.jayinnn.dev/posts/eth/</link><pubDate>Fri, 31 Oct 2025 23:50:42 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/eth/</guid><description>動機 會想要在大學期間交換主要是想要在到國外念研究所/博士班前，體驗國外的生活，同時也想同時在這邊做 project，認識一些教授和 researcher，為了之後申請的推薦信做打算。當然，在歐洲到處玩跟來 ETH 這個 CS 世界第四的學校感受一下這邊的學術氛圍也是一個很大的誘因，畢竟能當半年愛因斯坦的學弟也是蠻讚的。
申請 請看這篇文章：2024/25 交大交換第一梯次申請心得 - 蘇黎世聯邦理工學院 ETH Zurich
蘇黎世 蘇黎世是瑞士的第一大城市，雖然是最大城市，但市內人口大概也只有 40 萬人。少了一點點台灣有時候會出現的窒息感。雖然人口只有 40 萬，人口密度低，但市內的大眾運輸非常發達，有火車、有軌電車（Tram）、無軌電車、公車，這些不同的交通工具組織起了蘇黎世和周圍城市複雜的交通網路。之前看到文章有人說在市區沒有地方是需要走路超過 15 分鐘的。除了分佈廣外，就算在人口不怎麼多郊區，公車也是 15 分鐘就會有一班。藍白配色的電車在城市內狹窄的路面上穿梭是我覺得蘇黎世內最經典的景象。
蘇黎世湖 &amp;amp; Tram 還記得新生 orientation 的時候，很多人都會問對方覺得蘇黎世怎麼樣。我一律的回答都是：「風景很漂亮，除了很多人會在路上抽煙外我想不到其他缺點了」（東西很貴不是瑞士的缺點）
不知道是不是城市內就有一個湖的關係，蘇黎世的空氣一直都是滿清新的。天氣好的時候，在陽光的照射下，藍色的湖面閃著金光，配上山景，有時候會覺得能夠住在這邊真的是很幸運的事。
陽光下的蘇黎世湖 但入冬後天氣通常不怎麼好，蘇黎世湖讓蘇黎世比較容易有多雲的天氣，只要陽光被雲罩住，整個城市都會變成一個灰灰的色調，加上短日照有時候還是挺讓人不開心的。
宿舍 我們的宿舍位於 Zollikon，處在蘇黎世市的東南邊，是蘇黎世州的富人區，環境清幽，風景相當不錯，附近高中的觀景台可以直接看到蘇黎世湖。雖然離蘇黎世市區開車不用 15 分鐘，但因為不同市的關係，搭車的時候都要被多收一個 Zone 的錢，就已經很貴了還被多收錢真的很不爽。
宿舍大門 宿舍內部 宿舍內部 宿舍外部 雖然跟 ETH 不在同一個 zone 是一個滿大的缺點，但應該也只有這個缺點了（有點貴不是他的缺點，是我的）。離公車站、Migros、Coop（瑞士最大的兩間超市）都很近，煮飯的時候忘記買什麼材料走過去對面買好再回來就好了。而且房間很大，共用的廚房很大，我的房間剛好風景還很好，還有超熱、恆溫 25 度的地暖，外面在下雪裡面完全可以穿短褲短袖，睡覺的時候有時候還會流汗。我一開始沒有意識到這間宿舍的地暖這麼熱，到了其他宿舍才發現他們都是恆溫 20 度，晚上睡覺的時候還是很冷。這間宿舍的好處是大部分都是交換學生，所以「理論上」會比較容易交到朋友，畢竟這邊的大學生其實都滿忙的，前面提到很大的廚房和交誼廳讓這邊成為 E 人的天堂，想要找人聊天通常都可以找到人。
吃飯 我在交換前從來沒有煮過一頓飯。雖然平常很愛看各種煮飯的影片，像是王剛或詹姆士，但沒有自己實際煮過，所以我在出國前就很擔心自己會餓死，一直盧我媽可不可以讓我練習，但她就說你到國外自己就會學會了啦，事後證明她是對的。
可能是之前看煮飯影片耳濡目染的原因，其實學煮飯沒有那麼難，看一下食譜再加上直覺就能煮的蠻好吃，而且這邊外食真的太貴了，就算是最便宜的學餐平均也要 7、8 瑞士法郎，況且吃個飯還要跑到學校我覺得滿蠢的。雖然超市也是偏貴，但自己煮還是便宜很多，還可以煮自己愛吃的菜，比較麻煩的就是花時間，煮一餐加上一開始備料和煮完洗鍋子的時間一個小時跑不掉，跟台灣可以去學餐或是叫外送真的差太多了，不過自己煮出來很好吃的東西其實蠻爽的，可能我本來就蠻愛吃的，我覺得煮飯是交換的時候數一數二好玩而且很有成就感的事情（如果煮飯的時候廚房沒有人就更爽了）。
我最愛的親子丼！超級好吃又簡單 某次煮的義大利麵 農曆過年跟 Junwei 煮的雞湯，感謝 Leo 贊助雞湯中藥包 娛樂 這邊的娛樂我覺得沒有到很多，除了一些酒吧和夜店外，剩下的娛樂我覺得都很健康，最普遍的應該是 hiking。 蘇黎世是一個丘陵的地形，雖然是瑞士最大的城市，但是郊外還是有很多保留原始景觀的森林，像我住的 Zollikon，大概走十分鐘就可以到一塊我覺得不小的森林，而且步道都是有整理過的，還滿好走的。心情不好到那邊稍微散步一下就會好很多。除了山以外，蘇黎世湖也是我常常無聊散步會去的地方，一樣也是路程十分鐘，從宿舍到湖邊是一段滿陡的下坡，走起來有點吃力，但到湖邊就可以碰碰水，如果是夏天還可以下去游泳，看著對岸的山和湖面，有時候運氣好夕陽沒有被雲遮擋住就覺得自己真的是很幸運可以到這麼漂亮的地方交換。</description></item><item><title>ETH Zurich 教戰手冊</title><link>https://blog.jayinnn.dev/posts/eth-tutorial/</link><pubDate>Tue, 05 Aug 2025 01:20:13 +0700</pubDate><guid>https://blog.jayinnn.dev/posts/eth-tutorial/</guid><description>Authors: 李杰穎、謝育萱
交換前 🛂 簽證 需要準備的文件：
Type D visa application form (用瀏覽器填完之後印出來) 護照正本和影本 身分證正本和影本 兩張護照大頭貼，一張貼在 Application form 上 Visa Authorization 影本 (學校會寄 email 給你) 準備好以上文件後，打電話到瑞士商務辦事處 (02-2720-1001)，預約簽證辦理時間。
當天直接到世貿大樓 31 樓，3101 室繳交文件就 OK 了。辦事處會把護照收過去，等簽證辦好、貼在護照上後會再郵寄回去，大概會等一週左右。
費用：100 台幣（吧）（包含郵寄費用）
🏠 住宿 ETH 校內沒有宿舍，而是由一個叫 WOKO 的組織去管理包含 ETH 和 UZH 的學生宿舍。他們會在 Zurich 附近找適合作為宿舍的 housing。交換生一般都一定會有宿舍，不需要特別擔心。
最近幾年都是住在 Zollikon 的 Beugi，原本是一棟老人安養中心，後來被 WOKO 租下來變成學生宿舍，走路 2 分鐘就有一個公車站大約 15 分鐘可以到 Zurich 市中心，大約 40 分鐘到 ETH Zentrum 校區（大部分都在這邊上課）
宿舍有一個滿大的 share kitchen，有四組爐子+烤箱，一組爐子有四塊陶瓷加熱板可以用
因為這間宿舍很多人，所以一定會有人沒有好好收拾，沒有收拾好會被 WOKO 罰錢，所以建議可以組一個廚房清潔小隊，不然 WOKO 一天到晚寄信很煩</description></item><item><title>交大資工修課心得：無人機自動飛航與電腦視覺概論 - 陳冠文</title><link>https://blog.jayinnn.dev/posts/110-spring-uav/</link><pubDate>Sun, 11 Feb 2024 18:58:40 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/110-spring-uav/</guid><description>課程內容 上課方式 考試作業 因為疫情關係後來只剩下 11 次 lab，原先期中期末的競賽剩下期中競賽
心得</description></item><item><title>2024/25 交大交換第一梯次申請心得 - 蘇黎世聯邦理工學院 ETH Zurich</title><link>https://blog.jayinnn.dev/posts/nycu-cs-eth-exchange/</link><pubDate>Sun, 11 Feb 2024 01:40:54 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/nycu-cs-eth-exchange/</guid><description>申請結果 先放上申請結果，我這次是申請第一梯次的秋季班，第一志願就是 ETH。
申請結果 根據這篇 Dcard 貼文，我的交換總分應該算是高的，大家也可以參考文章中的分數做參考。
這邊也附上每個分項的總分：
分項佔比 其實還滿幸運有申請上，雖然今年的名額比往年多一個，總共有兩個名額，而且只有資訊學院的學生（包含大學部和碩士班）可以申請 ETH ，不過 ETH 往年都滿熱門的，所以還是很開心有這個機會到瑞士交換。 畢竟 ETH 在 CS 領域的排名是很高的，而且那邊也有幾個 PhD 做的題目我很有興趣。 而具體為何最終會選擇 ETH 在這篇文章我也會提到。
科普 自己申請下來覺得交大申請交換的相關資訊有點少，所以先來科普交換的相關流程和一些常見的問題。
以下資料都可以從 國際事務處 的網站找到， 這邊介紹的是 2024/25 第一梯次的流程，不保證每年流程都會一樣，請還是以當年簡章為準。
可交換姐妹校列表 可交換姐妹校列表
這個 spreadsheet 上面會列出所有可以交換的姐妹校，包含地區、校名、名額、身份限制、檢定和成績門檻。從申請結果可以看到中國大陸地區和其他地區的評分標準不一樣，這點也可以注意一下。
名額中如果有類似 &amp;ldquo;2/semester&amp;rdquo; 是指一個學期最多兩位交換學生。若是 &amp;ldquo;3 sem. slots&amp;rdquo; 則是最多可以接受總共三個學期的交換名額，所以如果有一位學生交換的時間為一年兩學期，則這個學校就僅剩下一個學期的交換名額。
第一梯次 &amp;amp; 第二梯次？ 第一梯次和第二梯次一個最顯著的差別是第一梯次可以申請秋季班（隔年上學期）或是春季班（隔年下學期），但第二梯次「僅能」申請春季班（隔年下學期）。
而且第一梯次和第二梯次應該是共用名額，所以如果有一間學校在第一梯次就用罄名額，那這間學校就不會出現在第二梯次的可交換列表中。 像是我這次申請的 ETH，往年都是在第一梯次就沒有名額了。所以如果已經確定自己想要去的學校，建議在第一梯次前就做好準備，盡量在第一梯次送出申請。
申請流程 其實申請的流程沒有很複雜：
準備校內徵選文件 線上申請（今年第一梯次的申請時間是 2023/12/4 ~ 2024/1/5） 志願分發（2024/1/19 公布分發結果） 背景 我目前就讀於交大資工大三
GPA: 4.23/4.3（系排 8/177 (4.52%)） TOEFL: 103/120 R29 L29 S23 W22 社團：桃友會會長、系學會資訊長 實習：Appier、微軟 交換相關經歷：高中參加桃園市全額補助的營隊，至美國參訪一個月 徵選相關文件 線上申請表 歷年成績單 在學證明 自傳 研修計畫 語言能力成績 其他有利審查文件 簽核表 線上申請表 這個就到系統上把基本資料填一填就好了，這邊就會填檢定成績和志願序了，所以可以等英文檢定考完再來填。 有一點可以稍微注意一下，如果你有托福或是雅思的成績，全民英檢就可以不用填了。</description></item><item><title>搞什麼飛雞補充教材 | 陽明交大探索體驗營</title><link>https://blog.jayinnn.dev/posts/weec-flappy-bird/</link><pubDate>Sun, 29 Jan 2023 13:03:32 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/weec-flappy-bird/</guid><description>前言 因為這次上課的時間比較短，沒有辦法把 Flappy Bird 裡面用到的語法全部教給大家，所以我把比較進階的概念放在補充教材中，有興趣的人可以看看，主要是陣列、for 迴圈和類別。
另外我也在最前面放了 Processing 中一些比較常用的函數和它們的用法，裡面也有一些小範例。如果寫到一半忘記語法也可以在這邊找一下，但鼓勵大家直接看 Processing 官方的參考文件，我覺得英文不會太難，可以嘗試一下。裡面寫的也比較完整一點。
上課教材 Github 程式碼 簡報 Processing 官方參考文件 補充教材 常用函數 background() 用來設定畫面背景，參數可以為 r, g, b 也可以為圖片 (PImage)。
rect() 用來繪製長方形。
rect(a, b, c, d)。其中 (a, b) 為長方形的位置座標，具體為左上角座標或是中央座標則由 rectMode 設定的值為準。
(c, d) 則為長方形的長和寬。
rectMode() 設定 rect() 函數中，a, b 代表的位置。
可以為 rectMode(CORNER) 或 rectMode(CENTER)。
CORNER: 代表左上角位置 CENTER: 代表中央位置 具體程式範例如下：
size(400, 400); rectMode(CORNER); // Default rectMode is CORNER fill(255); // Set fill to white rect(100, 100, 200, 200); // Draw white rect using CORNER mode rectMode(CENTER); // Set rectMode to CENTER fill(100); // Set fill to gray rect(200, 200, 120, 120); // Draw gray rect using CENTER mode line() 用來繪製直線。</description></item><item><title>交大資工 110 上修課紀錄</title><link>https://blog.jayinnn.dev/posts/110-fall-semester-class/</link><pubDate>Thu, 10 Feb 2022 23:09:57 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/110-fall-semester-class/</guid><description>先貼一下成績單好了，但在寫這篇文章的當下排名還沒出來，等排名出來我再更新一下圖片。
110-1 成績單 因為一些原因，這學期 GPA 是 4.17，我自己是覺得還行，但其實應該可以更好。 開學前原本想說不用修微積分，或許可以拚個書卷獎，但是後來學期中發現自己分組類的作業似乎都沒有辦法達到一定水準，所以開始覺得可能自己離書卷獎還有段距離。 成績出爐後更是證明了這點。
我下學期目前選了 26 學分，感覺要維持目前的成績變得更難了，希望自己繼續加油。
2022/02/25 更新 排名出來了，最後我在我們班排 3/42 (7.14 %)。根據交大書卷獎的頒獎的規則，班級排名前 5 % 者可以獲得書卷獎，且人數無條件進位，所以我就不小心撈到書卷獎了。 這個成績在某些班可能只能排第六或第七，所以書卷真的是撈到的。</description></item><item><title>交大資工修課心得：物理 (一) - 李威儀</title><link>https://blog.jayinnn.dev/posts/110-fall-physics-1/</link><pubDate>Thu, 10 Feb 2022 23:09:57 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/110-fall-physics-1/</guid><description>課程內容 基本上就是高中物理，我甚至覺得比高中物理還簡單。大致內容條列如下：
物理發展與物理量簡介 向量 等加速度運動 牛頓定律 功，能量及功率 動量與碰撞 轉動與圓周運動 轉動動力學 熱力學與氣體動力學 振盪 波動 波的干涉 電磁學 上課方式 其實李威儀的物理課網路上應該滿多心得文的，不過我還是稍微講一下。 上課方式其實就是看 ewant 平台上教授大概 200x 年錄的影片，雖然說有點年代了，但其實影片品質不差，可以很清楚的知道教授的上課內容。 但教授可能是為了講話的清晰度，語速其實滿慢的，建議可以用 2 倍速看，我自己覺得這樣的速度差不多。
考試作業 沒有作業，但助教會每兩個禮拜放建議的課本習題到 e3 上。
至於小考，主要是兩個禮拜考一次，考試的內容就是那兩周上課的內容。基本上有認真看完影片和做完習題基本上每次都可以拿滿。 這學期考了五次，但只取最高的四次，共佔總成績 20 %。 由於我前面四次都拿滿，所以我最後一次就沒有去考了。
大考部分，就期中期末各一次。各佔 40 %，基本上，就是考古和課本習題。 準備方式非常簡單，就把這個資料夾裡面的東西看完就好。有背熟我覺得基本上 80 分起跳。
心得 如果你是資工系的，請優先選李威儀，你不會後悔的。我總成績是 95.6 供大家參考。 但物理(二)聽說就沒有那麼友善了，不過我也還沒修過。</description></item><item><title>交大資工修課心得：生涯規劃與導師時間 - 孫春在</title><link>https://blog.jayinnn.dev/posts/110-fall-career-planning/</link><pubDate>Thu, 10 Feb 2022 23:09:57 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/110-fall-career-planning/</guid><description>課程內容 基本上就兩個：
演講 導師晤談 演講的部分前幾次是會邀請四個資工所的所長和系主任演講，後面幾次則是助教本人(?) 和外面的教授的演講。
導師晤談則是期中期末去找導師聊天，這個部分最困難的是和教授聯絡上，像我就連絡了兩個禮拜才成功。
上課方式 如果那週有演講會事先公布在 e3 上，準時進去 Microsoft Teams 就好了。助教那邊會自動點名，所以其實直接掛著也沒差。
考試作業 有兩次小作業，主要就是調查職業徵才和學程主題，大概兩小時可以做完的份量。
心得 就很一般的生涯規畫課，演講內容還行啦。成績部分，基本上有交作業就不會被當了，反正這是一堂 0 學分的課。</description></item><item><title>交大資工修課心得：線性代數 - 陳冠文</title><link>https://blog.jayinnn.dev/posts/110-fall-linear-algebra/</link><pubDate>Thu, 10 Feb 2022 23:09:57 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/110-fall-linear-algebra/</guid><description>課程內容 課程使用的教科書是由 Gilbert Strang 撰寫的 Introduction to Linear Algebra，版本應該不太重要。這本教科書可以不用買，一方面是系辦那邊會借書給學生，另一方面是這本書的 PDF 還滿好在網路上找到的。 但我自己私心認為這本書其實可以買，真的是寫得滿好的，可以買一本收藏。
課程內容基本上圍繞教科書的內容，但其實因為這堂課只有一學期的關係，所以滿多地方沒有上到的，像後面兩到三章其實都沒有上到，微分方程也因為我們還沒有完全學完微積分所以沒有上到，連 SVD 分解都是最後才補充的。 上課的主要內容如下：
Introduction to Vectors Solving Linear Equations Vector Spaces and Subspaces Orthogonality Determinants Eigenvalues and Eigenvectors Linear Transformations Complex Vectors and Matrices 上課方式 老師每堂課都使用板書，因為這學期大部分時間疫情都還是滿嚴重的，所以都是用 Microsoft Teams 進行同步上課，也會有課程錄影，但學期後半段因為疫情比較緩解的關係也可以實體到場上課。 老師上的滿清楚的，有時候會先帶題目，再講解觀念。我自己是比較喜歡這樣的授課方式，但其實老師的課不聽也沒有關係，因為老師的上課內容和清大 OCW 趙啟超教授講述的線性代數內容幾乎相同， 大部分同學都是看趙啟超老師的影片，但我自己是比較喜歡跟上老師的進度，這樣就不用再花時間去補線上影片，但也會比較花時間。
考試作業 作業總共有七次，每次的題目都滿多的，我平均要花 8 小時寫完，但因為作業都是課本上的習題，所以都找到的答案，成績基本上不會太差。
考試就期中、期末兩次。考試內容就 60~70% 計算題，剩下是證明題。證明題沒有很難，如果有把定理跟定義搞懂應該就大概寫得出來。但計算題超級搞，期中的時候出了一題數字超級醜的 inverse matrix， 算得要死還是算錯，超級哭。還好期末的數字就漂亮滿多的。
心得 我覺得線性代數是一堂滿重要的課，滿多資工領域都會用到的，建議可以修硬一點的老師，像我覺得陳冠文就不錯 (但他好像沒有要開線性代數了 :( )，像另外一個老師就因為太水，所以另外一個班的學生好像大多數都沒有學到甚東西。我是覺得這樣有點可惜啦。
至於分數的甜度，最後期末好像調了四分吧，但其實沒有到非常甜，A+ 好像 10 個出頭嗎？</description></item><item><title>交大資工修課心得：計算機概論與程式設計 - 黃敬群</title><link>https://blog.jayinnn.dev/posts/110-fall-intro-to-computer/</link><pubDate>Thu, 10 Feb 2022 23:09:57 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/110-fall-intro-to-computer/</guid><description>課程內容 雖然這門課叫做計算機概論與程式設計，但除了第一周在上計概以外，剩下 17 周都在上程式設計。 程式設計的部分主要是在上 C ，有教到的東西我大致條列如下：
C Fundamentals Formatted Input/Output Logic Operators and Selections Array String Function Debug (教如何用 Visaul Studio Debug) Recursive Functions Pointer and Function Pointer Structure Usage of header files Sorting Algorithms 上課方式 上課方式主要是採教授錄完當周的影片後，會上傳到 e3 ，學生再自己下載下來看。 一周約有三小時的影片。 但根據我的調查，幾乎沒有人再看教授的錄影。 因為其實只要看 TA 給的簡報 + 問別人就可以寫出上機的練習和回家作業了。
上機的部分，主要是 TA 會先講解這周練習和作業會用到的知識，大概只會講解 15 分鐘左右，所以其實會認真聽的人其實不多。 講解後就可以開始 Demo 這周的練習題給助教看了，Demo 方式是助教會給 input，如果你的程式的 output 跟助教那邊一樣那你就可以離開了。 而且這周的練習會事先公布，所以其實大部分人在上機課前就會先把練習寫完，這樣就不用花很多時間在等 Demo。
考試作業 作業幾乎每周都有，每次最多最多就四題左右。難度大概和當周的練習題差不多，對於有程式基礎的人來說不難。但 Function Pointer 的部分可能會稍難一點。
考試的部分就是期中期末各一次，期中滿分 110 分，期末滿分 120 分。特別的是，期中考前一周有一次 practice exam ，那次考試的成績算一次練習的成績。 主要的用意是要讓我們熟悉一下系計中電腦的環境。</description></item><item><title>交大資工修課心得：計算機網路概論 - 蕭旭峰</title><link>https://blog.jayinnn.dev/posts/110-fall-intro-to-computer-networking/</link><pubDate>Thu, 10 Feb 2022 23:09:57 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/110-fall-intro-to-computer-networking/</guid><description>課程內容 把五層網路架構的前四層 (Application, Transport, Network, Link) 講完，但一些東西有跳過，像 BGP 好像就跳過了。
上課方式 上課教科書主要是 Computer Networking - A Top Down Approach, 7th
這學期幾乎都是線上上課，學期中有一堂課改採實體但教授說有同學反應線上比較好，於是又恢復成線上了。
教授主要是用稍微修改過的作者投影片上課，但傳到 e3 上的 pdf 會因為 &amp;ldquo;版權問題&amp;rdquo; 而把圖片全部刪掉。 但投影片上的圖片其實滿重要的，沒有圖片根本不知道那部分在講甚麼。 所以後來我就自己去網路上找作者原版的投影片，發現其實沒有差多少，所以後來基本上都是自己看投影片自學。
考試作業 作業總共有四次，個人覺得都不難，兩個小時內應該都可以做完，不過建議跟同學對一下答案，因為作業分數佔滿重的，總共佔 50%。
沒有小考，只有各一次期中期末，各佔 25%。 但後來可能因為期中考分數太慘，老師決定改考三次，並取兩次最高的成績。考試部分我覺得不難，如果有認真上課和複習應該都可以拿到 80 分以上，但班平均似乎不太好看，我也不太確定原因。
心得 蕭旭峰教授應該是三個班中分數最好看的，而且我覺得他除了講話的方式很容易讓人睡著以外，其實教得並不差，概念都講解的很清楚，也不會學不到東西。 但考試比較簡單這點可能會讓大家強迫學到的東西變少，我覺得就斟酌看看啦， 不過我自己是學得很開心啦。最後總分拿 94.63，但全人系統上面的成績是 100 所以我也不確定有沒有調分。</description></item><item><title>交大資工修課心得：進階英文聽力與討論 - 李麥德</title><link>https://blog.jayinnn.dev/posts/110-fall-advanced-english/</link><pubDate>Thu, 10 Feb 2022 23:09:57 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/110-fall-advanced-english/</guid><description>課程內容 Crimes Movies Sport TV Bussiness Music American Slang British Slang Astralian Slang Slanging matches MTV 上課方式 每周都會有一個特定的主題，當周的上課內容都會圍繞在那個主題上。
大致的上課方式是老師會在黑板上寫幾個可以討論/分享的題目，然後就進行小組討論。 除了小組討論外，也會進行全班的討論，進行的方式大概是讓班上每個人都要從透過跟其他人聊天來收集一些需要填上的資訊。
考試作業 這堂課沒有考試。
作業的部分與其說是作業不如說是表演，像我們這學期總共就進行了三次，分別為：
電影心得分享 推銷 TV Show 給電視公司 三個人分別扮演美國人、澳洲人、英國人，並使用該地區的 slang 來進行對話 最後也有期末作業，主要是要拍 10 段兩分鐘以上的英文影片，影片內容可以為任意主題。還有一個作業是自己改編某首歌曲的歌詞，並自己演唱，剪輯成 MV。
心得 這門課其實還滿涼的，主要是上課的時候其實不怎麼需要動腦，只要願意跟別人用英文聊天應該都可以修的滿開心的。 演戲的部分其實只要組員溝通沒有問題，基本上準備時間也不用太久。像我的組員都還滿不錯的，也不會划水，所以整體還做得滿愉快的。
我最後分數拿 A，其實還行，因為我其實每次表演的分數幾乎都只有 90 分上下，所以這個分數其實滿合理的。</description></item><item><title>大一下目標</title><link>https://blog.jayinnn.dev/posts/freshman-spring-semester-resolution/</link><pubDate>Wed, 19 Jan 2022 13:34:16 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/freshman-spring-semester-resolution/</guid><description>TODO 暑假上系計中助教 暑假去考第一次托福 成功投上頂刊 or 頂會 過 GPE 盡量不要期中退選 選到無人機 or CCNA 開始準備托福 找口說模板和寫作模板 每科都至少 A+ 每天早睡早起 養成健身的習慣 精進攝影技巧 (Added at 2021.02.10) 英文 開始背單字，準備中高級和托福。可能會去修個英文寫作練寫作能力，不過托福寫作似乎滿模板的，也不確定會不會用到。
口說能力可能還是要靠平常練習，希望可以找到人陪我講英文 :(
專題 目前這個專題可能會投 SIGGRAPH 但感覺過的機率偏小，如果沒過的話就是繼續改善投其他頂刊或頂會吧。
如果順利 accept 的話，可能要思考一下接下來要做甚麼了，我一直覺得找到好的題目比做題目本身還難 QQ。而且題目其實決定這個作品到底好不好，選到爛題目就算能力再強也沒用。另外我也不確定繼續待在做 IoT 的實驗室對我來說好不好，雖然學長人超讚，而且經費其實還滿多的，但感覺我應該去更 specific 的實驗室，可能還要再想一下。
修課 之前預排根本是亂排的，我把有興趣的全部排上去了，剛剛重排了一下應該會在 25 ~ 27 左右，我覺得應該是一個可以負擔的量，如果期初發現不對再退就好。
目前還是希望每一科都能夠 A+ 啦，如果順利的話大一上計概、計網概、物理應該是都能穩 A+，其他可能要看期末報告跟考試怎麼樣了。希望大一下每堂課也能這樣順利。
感覺自己大一上過得好像有點輕鬆，但我其實也修了 23 學分。
競程 老實講，我自己並不是一個喜歡動腦的人，只要一個題目對我來說太難或我認為思考下去不會有好的結果我就會放棄。這也是我高中競賽打的沒有很好的原因。學測後花了一點時間爬到藍人，但有學長跟我說靠手速上的 ranking 都是假的，其實自己實際上並沒有明顯的進步。
因為自己現在有一個隊，如果都只靠隊友 carry 我也不太好意思，總覺得要自己排一下題單，每天固定寫個幾題，但我自己覺得我可能寫個兩個禮拜就會開始耍廢了哈哈。
希望大一下我的競賽程式可以有明顯的進步，這樣大二上的演算法概論應該會修的比較輕鬆吧。
好啦，雖然前面說自己不喜歡動腦，但其實有時候還是滿喜歡自己想到解法的感覺。
活動 大一上參加一堆活動，認識一堆人。抓馬盃認識資工系一群猴子、寒桃認識外系另外一群猴子。自己在活動裡面好像都莫名其妙變成那個活動最忙的人之一，有點小慘。
累歸累，但我還是玩得滿開心的，我其實滿喜歡認識人的。但感覺自己認識一堆人，然後每個人都沒有很熟，這可能也是我的缺點之一吧 QQ。
愛情 我覺得我對自己滿沒有自信的，有時候會莫名其妙說出一些貶低自己的話，這點好像從高中就這樣了，可能還是要想辦法改吧。
Summary 大一上整體過得滿開心的，雖然跟我原本想像的不太一樣，但整體來說還是好的啦，希望大一下我可以成為更好的人。找到自己真正的目標，然後往那個目標邁進。</description></item><item><title>一個新的開始</title><link>https://blog.jayinnn.dev/posts/graduation/</link><pubDate>Wed, 02 Jun 2021 00:39:12 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/graduation/</guid><description>開端 國中時，我報考了武陵科學班。當初認為我大概只是來陪竣程考的，結果很幸運的在物理表現的不錯，讓我以高錄取分數一分的成績進入了武陵科學班。
暑輔的第一天，我心中充滿不安，因為我知道在這個班幾乎所有人都比我強 (如果以入學考來看)。我害怕我在這個班無法生存、適應，於是我盡可能融入班上每個話題，大家在聊微積分，我就跟著進去討論；大家在聊LoL，我也索性加入。
高一時我其實蠻迷茫的，我雖然從小就對資訊很有興趣，也有一點自以為的天賦，但在我認清資奧的難度後，發覺進入選訓並不是一件簡單的事，我其實有點陷入了半放棄的狀態，我不知道自己該專注在課業上，還是放手一搏去挑戰資奧。最後我可能選擇了兩者都不是的道路吧。
機緣 高二，我和品奕開始進行專題研究。能跟品奕一起做研究可能是我高中生活最幸運的事，品奕對事物有著我沒有的觀察力，也會蹦出幾個很有趣的 idea 讓我們的專題繼續發展。
我們很順利的從市科展一路打到了全國科展，最後也拿下不錯的名次。我後來自己報名旺宏科學獎，很幸運的，我們的作品剛好很中評審的胃口，讓我拿到了旺宏獎，如果沒有旺宏獎，我可能還沒上岸吧。
回首 學測結束後，我有時候靜靜回想，發現自己在高一、高二的時候浪費了許多時間在不必要的事情上。但這或許就是人生，人生總是需要做點不必要的事情。
高中這三年，我和303的同學們一同完成許多任務，如科推、成發、資讀&amp;hellip;，也一起創造了回憶。不得不說，這三年是我人生中過得最充實也最開心的三年。我對班上所有人都相當感謝，在這篇文感謝所有人似乎有點不切實際，或許我再找一天私訊所有人好了。
在這三年中，我也因為自己的愚蠢和幼稚，毀掉了幾段人際關係，但我還是會想辦法縫合的。
新頁 期待在交大資工的四年，我能繼續向目標前進，而在前進的路上，偶而也停下來看看路途中的美景。</description></item><item><title>證明 Second (Partial) Derivative Test</title><link>https://blog.jayinnn.dev/posts/proof-of-second-derivative-test/</link><pubDate>Tue, 18 May 2021 05:56:33 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/proof-of-second-derivative-test/</guid><description>Second (Partial) Derivative Test Let $f : D \rightarrow \mathbb{R}$ be a function in two variables $x$ and $y$. Suppose that $f, f_{x}, f_{y}, f_{xx}, f_{yy}, f_{xy}, f_{yx}$ are all continuous in an open disk centered at $(a, b)$ and $f_{x}(a, b) = f_{y}(a, b) = 0$. (Then $f_{xy}(a, b) = f_{yx}(a, b)$)
Let
$$D(x, y) = f_{xx}(x, y) f_{yy}(x, y) - \left(f_{xy}(x, y)\right)^{2}$$
Then
if $D(a, b) &amp;gt; 0$ and $f_{xx}(a, b) &amp;gt; 0$, then $f(a, b)$ is a local minimum of $f$, if $D(a, b) &amp;gt; 0$ and $f_{xx}(a, b) &amp;lt; 0$, then $f(a, b)$ is a local maximum of $f$, if $D(a, b) &amp;lt; 0$, then $(a, b)$ is saddle point of $f$, if $D(a, b) = 0$, no conclusion.</description></item><item><title>從 Hexo 到 Hugo</title><link>https://blog.jayinnn.dev/posts/from-hexo-to-hugo/</link><pubDate>Wed, 12 May 2021 22:28:44 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/from-hexo-to-hugo/</guid><description>為何選擇從 Hexo 搬遷到 Hugo 從這個部落格建站以來，我一直都是使用 Hexo 作為部落格的框架。但在使用過程中我主要遇到了幾個問題：
Hexo 使用 Node.js 來生成靜態網頁：這使不同設備上的套件相依變得十分難解 (主要是因為package.json，但難解的原因可能是因為我對Node.js不熟)，也讓在不同設備上寫作變得十分困難，使部落格的更新頻率變得十分糟糕。 主題易與他人重複：我先前是使用 Hexo 的 NexT theme 作為部落格的主題。依照我的觀察，使用hexo的人中，大約有60%~70%是採用這個主題的，這就讓自己的部落格沒有個人的風格，也讓訪客覺得很單調。 Github 常常會提醒我 repo 的 package 有 security vulnerability 或者是更新的PR：雖然這是一件好事，代表package有人在維護，但每次看到Github跳訊息就覺得很煩。 各種security vulnerability和更新的PR 4. Hexo 生成網頁的速度較為緩慢：雖然部落格文章不多我感受不出來，但看網路上大家都說但部落格文章達到100篇左右的時候，網頁的生成速度可能會飆升到20秒左右。
以上的問題若改用Hugo就可以解決了。Hugo是使用Go語言編寫，整體框架沒有複雜的套件相依問題要解，且Go語言的執行效率很高，聽說可以逼近C。於是在個人申請結束後，我決定把文章備份，並把部落格框架從Hexo換成Hugo。
備份文章 與Hexo一樣，Hugo是使用 Markdown 作為寫作的語法，所以備份文章是整個搬遷過程中最簡單的部分了，就只要把圖片跟 Markdown 複製到其他地方就結束了。
安裝 Hugo Hugo 的安裝方法主要有幾種：
Binary (for all platforms) Docker (for all platforms) Snap (for Linux) Homebrew (for macOS and Linux) MacPorts (for macOS) Chocolatey (for Windows) Scoop (for Windows) 以上安裝方式的說明都可以在 https://gohugo.</description></item><item><title>旺宏科學獎與國際科展</title><link>https://blog.jayinnn.dev/posts/macronix-award-and-tisf-2021/</link><pubDate>Fri, 07 May 2021 07:34:40 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/macronix-award-and-tisf-2021/</guid><description>前言 這篇文章是為了武陵風華寫的，不過對於想要參加科展的學生應該滿有參考價值的。
內文 高二的時候，科學班的每位同學都會到大學去進行科學研究。因為我和品奕都對資訊很有興趣，所以就決定了兩個人一起到中央大學蘇木春教授的實驗室進行研究。我們研究的主題是與生成對抗網路有關，目標是希望能快速的生成出遊戲場景中的山脈地形。實驗室的研究生學長們很用心的教導我們，讓我們可以很快地把原本不熟的知識補上。我和品奕也很認真的在進行研究，每天一回到家就是打開電腦，連線到實驗室的電腦來寫程式和確認訓練的結果。
我們後來將研究參加科展，很幸運的獲得了桃園市第一名及全國第二名(第一名從缺)。在準備科展的過程中，我發覺如何讓評審在短時間內充分了解我們的作品是最重要的。就算你的作品可能優於其他人，倘若沒有詳細的介紹，評審就不會了解作品的價值，也因此得不到好的獎項。 所以在比賽前，劉思德主任就不停地訓練我們口語表達及資料統整的能力。
科展結束後，我另外參加了旺宏科學獎。旺宏科學獎分為初賽及決賽，初賽為書面的審查，僅需要提出初步的計畫及想法。而決賽則為30分鐘的現場口試。我們的作品在第一階段的時候就相當完整了，所以也就順利的入圍決賽，而在入圍決賽後，旺宏會提供兩萬元的研究經費讓入圍隊伍們繼續進行研究。
口試部分是我認為是旺宏科學獎中最有挑戰性的部分。雖然我已經參加過桃園市科展及全國科展，但是在這兩次科展中，我們只需要口語報告約5分鐘，且是直接使用海報來進行報告。相較之下，旺宏科學獎則需要報告15分鐘，還有額外的15分鐘讓評審委員詢問問題，而評審委員們都是大學的教授，甚至還有中研院的副院長，而且我認為我的口語表達能力還蠻糟糕的，所以在賽前我對於口試是相當緊張的。幸好圖書館的美慧老師同意讓我在口試前一個禮拜借用圖書館的空間，讓我有機會事前練習，也特別感謝張智閎，我從他的建議中學到了很多。口試進行的相當順利，我當下就覺得應該會拿下不錯的名次。但沒想到的是我竟然獲頒了睽違六年都沒有頒發的旺宏獎。
國際科展則是我們在高中參加的最後一個競賽，我們在國際科展前繼續改進我們的作品，讓模型可以生成不同風格的山脈地形。國際科展一樣分成初賽及複賽，初賽為書面審查，複賽則為口試。口試的部分與市科展及全國科展相同，都約為5分鐘。在賽前，我們自己預估有蠻大機會能入選國手的。但最終結果我們只拿到了四等獎，甚至不符合國手選拔資格中的一到三等獎。起初知道結果後當然是十分喪氣的，不太明白為何只拿到四等獎。但後來仔細想想後發現競賽本來就有一定的運氣成分，每個評審喜歡的主題都不盡相同。所以後來也釋懷了。
在這兩年做研究的過程中，我了解了做研究的過程及在其中會遭遇到的困難，也漸漸懂得如何去克服這些困難。在參加大大小小的競賽中，我的口語表達能力漸漸地進步，也不再害怕評審教授們所提出的犀利問題。科展的經驗帶給我的不只是名次及成就，而是永遠的人生經驗。</description></item><item><title>110 成大電機普渡雙聯組 &amp; 清交APCS組 個人申請及面試分享</title><link>https://blog.jayinnn.dev/posts/gsat-apply/</link><pubDate>Thu, 06 May 2021 16:58:15 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/gsat-apply/</guid><description>這篇文章主要分享自己在個人申請的過程和心得，希望會對有要申請跟我相同校系的有幫助。
為何決定個申 雖然學測沒有考好，但我覺得我的備審還算不錯，特別是旺宏獎加分很多。評估之後覺得自己應該滿有機會錄取，所以決定試試看。
志願選填和結果 學測成績 先提一下自己的學測成績好了。
國文：12 英文：15 數學：12 自然：15 社會：15 APCS：觀念題 5 級分、實作題 4 級分 p.s. APCS的成績是台師大會自己取歷次最高分上傳到徵委會，不需要自己上傳。
選填志願 落點分析六顆星的大概有這幾間：
清大資工APCS組 清大資工人工智慧組 清大電資學院學士班 交大資工APCS組 成大電機普渡雙聯組 成大資工普渡雙聯組 台大土木 台大農藝 &amp;hellip; 基本上跟台清交成的電資無緣了，不過清交APCS組和成大電機普渡雙聯組還可以拚一下，所以最後決定還是同時準備指考和個人申請，到時候如果有上再決定要不要指考。
最後我填的六個志願如下：
台大資工APCS組 清大資工APCS組 清大資工人工智慧組 清大電資學院學士班 交大資工APCS組 成大電機普渡雙聯組 可以提一下我選成大電機的普渡雙聯組而非資工的原因，主要是因為成大電機一階篩的人比較多，上的機率比較大。而且我對電磁學等等物理並不排斥，所以就決定填電機而不是資工。
篩選結果 最後有過的有四個系：
清大資工APCS組 清大資工人工智慧組 交大資工APCS組 成大電機普渡雙聯組 未通過的：
清大電資學院學士班 (未通過總級分超額篩選: 英＋數＋自＝43) 台大資工APCS組 (未通過數學超額篩選: 13級分) 這個組我最後聽說好像要英數自＋APCS觀念實作滿級分，有點誇張。 備審資料 備審的格式我主要參考韋詠祥學長的備審，而因為我對於資訊這方面經歷算多，所以要寫出豐富的備審對我來說不難，但我就沒有很細的去修裡面的字句了。備審的PDF可以在jayin92/110-GSAT-resume找到。
字體部份我都是使用思源黑體系列 (Noto Sans CJK TC)，標題採用Medium字級，內文則為Regular字級。
面試 這四個系除了清大資工人工智慧組不需要面試以外，其餘都需要面試。
成大電機普渡雙聯組 準備 成大電機普渡雙聯組是與普渡大學進行雙聯學制，所以面試是採全英文。一開始需要自我介紹2分鐘，後面則是教授Q&amp;amp;A六分鐘。Q&amp;amp;A部份如果真的沒辦法用英文回答，可以改用中文，不過我覺得如果真的改用中文應該會滿扣分的。
自我介紹我主要是以：介紹姓名、學校 → 個人特質 (以例子佐證) → 得到獎項 → 申請動機，最後大概長這樣：</description></item><item><title>2021 TISF 台灣國際科展 Day 1</title><link>https://blog.jayinnn.dev/posts/2021-tisf-d1/</link><pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate><guid>https://blog.jayinnn.dev/posts/2021-tisf-d1/</guid><description>昨天因為吃完飯後睡太飽，加上房間一直有蚊子在耳邊，所以搞到凌晨三點才睡。甚至無聊到算森森數學講義的機率part，數學能力似乎還沒退化。
早上六點半就被我媽挖起床，七點左右出門就去大湳公園搭228到武陵了。因為放著我們海報的圖書館八點才開，所以我先到路易莎買了鮮奶茶喝，今天貌似是武陵的補考，很多武陵學生跑來學校考試。
圖書館的阿姨人還是不錯，會關心我今天要去哪裡w。
大約八點我就坐上品奕媽媽的車。原本想說這樣到科教館會不會太早，殊不知今天國一大塞車（也許是常態啦，畢竟我很少那麼早去台北），我們大約九點四十分才到會場。
報到就填填資料，把該交的東西交一交就結束了。之後就跑到九樓佈展了，我們的展板在整個會場的最角落，蠻邊緣的，旁邊甚至不是資訊組的。而且會場還滿悶的，我們又在玻璃窗旁邊，在貼海報的過程中我差點暈倒 QQ。
貼完海報後就到處看看別人的展板，有些題目蠻有趣的，但有些人還沒有來佈展，沒看到他們的還滿可惜的。
後來中午就跑到士林捷運站附近吃 sukiya + 以利泡泡冰，之後因為自己實在是有點累，所以就請品奕媽媽載我們回家了。
p.s. 我還是覺得沒有報名到學生交流活動很白癡。</description></item><item><title>110 學測回顧</title><link>https://blog.jayinnn.dev/posts/gsat-look-back/</link><pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate><guid>https://blog.jayinnn.dev/posts/gsat-look-back/</guid><description>前言 我的目標是台清交的電機系和資工系，而這些科系基本上只看英文、數學、自然三科 (除了清交甲組可能要求國文)，所以我只認真看了這三科，國文和社會基本放推。還記得決定放推國文後，班導還特別找我去聊了一下，鼓勵我還是可以看一下國文，讓自己能選擇的路變多，但因為我對國文實在是沒什麼天份，而且在現在的命題方向都是大量的閱讀理解，花時間看國文cp值我認為是很低的，所以我後來幾乎只有練習國文寫作(而且也沒有很認真)希望可以撈到一個頂標。
複習過程 我複習的進度基本上都是跟著學校的模擬考再跑，模考這次考到哪邊，我就大致複習到哪邊。我自己是覺得這樣複習還可以啦，一部分有讀到書，也不會讓自己的壓力那麼大。然後參考書除了一開始有買一批外，其他都是看模考的表現，表現不好的科目我就再去買那科的複習講義或題本。比較特別的是數學，數學我是只用森森推薦的對話式加上他印給我們歷年模擬考題本。
到了倒數一個月也就是四模後，我開始寫各種模擬考題，主要是北模跟中模，寫完就在稍微檢討一下然後記在筆記本上。就這樣一直到了考試前兩個禮拜吧，我把前幾年的中模跟北模都差不多寫完了，我就開始寫學測的歷屆。因為其實我刷題還蠻快的，所以一直有在控制不要一天寫太多，其他時間就稍微再把觀念複習一下(主要是自然的觀念啦)跟看一下筆記本。
我自己覺得我學測複習的不算很認真啦，還是有蠻多時間是空出來的。因為我一直覺得歷年學測的難度都不算太難。而且在我寫了學測歷屆後，越來越覺得學測對我來說應該不會是個阻礙，但最後證明我是錯的。
英文 英文這科對我來說應該算有準備的三科中最穩的，四次模考我都15級分。考前的複習就只有寫寫翻譯練習、練練作文跟寫妙妙卷。考試當天基本上不太緊張啦，倒是戴佑丞看起來滿緊張的，我就一直跟他說不用緊張，然後一直念「一定15，已經15」。
這次英文聽說算是難的，選擇部份我是覺得單字部份相較歷屆難蠻多的，出現一兩題不是4500單的範圍。而閱測就那樣吧，基本上小心看題目就不太會錯了。然後是作文的部份，我一開始看到作文也不太知道要怎麼組織，想了很多架構，最後決定以農場老闆的角度描述整個事件，最後大概寫到背面倒數第三行吧。
最後對完答案選擇部份是扣3，翻譯我抓扣1.5分。這樣來看英文15級分應該沒有問題。
國文 國文我幾乎沒有什麼準備，不過反正考很多閱讀理解，所以我覺得沒什麼大不了的。第一題的注音我看到完全傻眼，就隨便猜了一個選項，第二題的找錯字我也寫錯了，真爽。後面的閱讀理解除了有一篇我完全看不懂他想表示什麼以外，其他題應該就錯一到兩題。再來是多選題，多選題一直都是我們的罩門，我抓不太到出題老師出正確選項的那條界線在哪裡。雖然這次多選沒有出國學常識，不過我還是錯的蠻慘的。
作文的第一題我就順順的寫過去。第二題「如果我有一座新冰箱」，我實在是不知道怎麼寫，所以我就看著稿紙想了很久，最後就胡亂寫了三點：理想、快樂跟難過吧，也沒什麼組織跟架構拉。
國文選擇我應該是扣18分左右，就看作文可以撈到幾分吧。目前預估13左右吧。
社會 單純考好玩的科目，完全沒有看，連課本都沒翻，只有寫過109跟108的歷屆，而且都沒有15。拿到考卷公民我就隨便選最政治正確的答案，地理就靠邏輯推，歷史就隨便寫，會就會，不會就不會。
第一天回家無聊看了一下得勝者的答案，越對越奇怪，我怎麼幾乎沒什麼錯呀。最後對完竟然只扣了14分，真的太扯。這個分數基本上一定15級分，我還是覺得很扯，不過這個分數對於二類科系一點用都沒有啦。
自然 自然是我準備最久的科目，因為它包含了四個科目，而且很多東西要背。我大概花了70%的準備時間在自然上。至於這次自然的考題，我是覺得有比較難一點拉，但對我來說是還行。最後應該是扣10分左右，15級分應該是蠻穩的。
數學 數學當然要寫在最後呀。
簡而言之，這次數學就是個完全的失敗。
考試前幾天，我寫完號稱近年最難的106數學，考出來95分。看到這個成績，我心中充滿了信心，覺得數學應該穩了，而且近年來數學的命題越來越簡單。所以到學測前幾天，我就只複習自然，其他科都沒什麼看。甚至沒寫什麼數學維持手感。但其實在高中三年，我的數學成績一直不太好，甚至有幾個學期差點被當。而且四次模考，只有一次考到了15級分，甚至在四模考卷比較難的情況下，只拿到了12級分，非常的慘。但我一直抱著「反正學測不會考那麼難的心態」，所以對於自己很差的數學成績一直沒有放在心上。最慘的是，我對於數學考試都有莫名的恐懼，如果這個考試失去我的掌握範圍，我就會開始越來越緊張，越寫越快，深怕自己無法完成題目，最後一堆題目都會寫錯，然後原地自爆。
考試當下，我看到題目就覺得好像不太妙，從第二題開始就有點卡，而且開始越寫越緊張。單選寫完之後，我按照自己寫歷屆的習慣，開始寫多選，殊不知這次多選是整份考卷最難的部份。我越寫越緊張，多選寫完後(有些題目我已經不知道自己在算什麼了，直接亂猜就下一題)，我發現我已經寫了60分鐘。如果是寫歷屆，這個時間我已經把整份考卷寫完，開始檢查了。我開始越來越緊張，又看到選填很多題目沒辦法一眼看出怎麼解，到這邊，我心態基本上已經崩了，很多題目我已經不能冷靜分析，只想快快的得到一個答案然後下一題。最後，我硬著頭皮把選填會寫的題目寫完，還有三題沒寫。這時候考試已經剩下25分鐘，而我還有一堆題目不確定答案。最後25分鐘，我基本上都是腦袋一片混亂，不知道自己在幹什麼。
最後對完答案，我的成績是慘烈的70分整，這個成績大概就12級分，最多就13級分。12、13級分根本連台清交的第一階段都過不了。一回到家，我就倒在電腦桌前哭了大概三十分鐘吧，我也不太記得了。過不了第一階段意味著這三年來我參加各種競賽、幹部經歷、全國科展第二名、甚至是旺宏獎都沒辦法用在學測的備審資料了，想到這邊，我就覺得我實在是太失敗了，浪費了各種獎項。我根本沒有想過我學測會考出這種分數。如果有人在學測前兩天跟我說，ㄟ，你學測要70分了，我一定不會相信。
但都考過了，如果想上台大資工，就只能靠國際科展薦送/保送了，不然的話就要考指考了。
許願 下個禮拜就要國際科展了，國際科展每年大約會有兩組入選為出國代表，希望我們可以成為出國代表。順利參加ISEF，保送上台大！</description></item><item><title>武陵高中108學年度第一學期二年級科學班數學科第二次段考</title><link>https://blog.jayinnn.dev/posts/108-wuling-math-mid-term-test/</link><pubDate>Thu, 05 Dec 2019 22:17:10 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/108-wuling-math-mid-term-test/</guid><description>武陵高中108學年度第一學期二年級科學班數學科第二次段考 多重選擇題 💡 每題11分，答錯1選項得6分，錯2選項得2分，錯3選項(含)以上得0分，共33分 $若\vec{a}、\vec{b}、\vec{c}為空間中三個向量，試問下列何者為真？$
( A ) $|\vec{a} \cdot \vec{b}| = |\vec{a}| \cdot |\vec{b}|$
( B ) $\vec{a} \cdot (\vec{b} \cdot \vec{c}) = (\vec{a} \cdot \vec{b})\cdot\vec{c}$
( C ) $\vec{a}\times(\vec{b}+\vec{c})=\vec{a}\times\vec{b}+\vec{a}\times\vec{c}$
( D ) $若 \vec{a}\cdot\vec{b} = \vec{a}\cdot\vec{c}，且|\vec{a}|\neq0，則\vec{b}=\vec{c}$
( E ) $若存在兩實數x, y使得x\vec{a}+y\vec{b}=\vec{0}，則x=y=0$
已知$f(x)= ax^3 + bx^2 + cx + d$為三次實係數多項式，試問下列敘述何者正確？
( A ) $方程式f(x)=0至少有一個有理根$
( B ) $若f(i)=0，則x\cdot f(x)+1=0必有實根$
( C ) $若f(x)除以(x-1)的餘式為2$，$則商式Q(x)是一個係數均為正數的多項式，則f(x)=0一定沒有大於1的實根$
( D ) $若f(1+\sqrt{5})=0$，則$f(x)=0$恰有3個實根
( E ) 若不等式$(x+1)(x+2)f(x)&amp;lt;0$的解為$x&amp;lt;-2$或$-1&amp;lt;x&amp;lt;0$，則對任意實數$x，ax^2+bx+c$恆成立</description></item><item><title>108學年度武陵資訊學科能力競賽上機考題目分享</title><link>https://blog.jayinnn.dev/posts/108-wuling-programming-competition/</link><pubDate>Fri, 13 Sep 2019 22:07:39 +0800</pubDate><guid>https://blog.jayinnn.dev/posts/108-wuling-programming-competition/</guid><description>pA：十八啦 輸入 四顆骰子的點數情形
輸出 若四顆骰子中只有其中兩顆骰子點數相同，則輸出另外兩顆骰子之點數和 若四顆骰子中有兩組相同點數的話，則輸出點數和較大的那一組 若四顆骰子的點數皆相同，則輸出WIN 若只有三顆骰子的點數相同或四顆骰子點數都不同，則輸出R 範例輸入及輸出 範例輸入 範例輸出 1 1 1 1 WIN 1 1 1 3 R 1 2 3 4 R 1 1 2 2 4 1 2 3 3 3 pB：線段分割 輸入 一個正整數
輸出 對於輸入正整數之不重複切割方案之最大分割數
範例輸入及輸出 範例輸入 範例輸出 1 1 10 4 7 3 15 5 60 10 Hint：
1 = 1 10 = 1 + 2 + 3 +4 7 = 1 + 2 + 4 16 = 1 + 2 + 3 + 4 + 6 60 = 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 15 pC：迴文判斷 我們說一個字串是一個迴文字串的意思是這個字串經過反轉後，會與原字串長一模一樣。</description></item><item><title>2019 SITCON Camp 回顧</title><link>https://blog.jayinnn.dev/posts/2019-sitcon-camp/</link><pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate><guid>https://blog.jayinnn.dev/posts/2019-sitcon-camp/</guid><description>前言 一開始不知道有SITCON 夏令營這個活動，是同學拉我去的（因為團報有優惠www），而且這個營隊沒有衝到我去美國的時間，所以就腦衝一波了。
其實很早之前就知道SITCON這個年會，原本今年也要去參加的，但因為沒有注意報名的時間所以就錯過了QQ。
報名的時候就把以前做過的專案打上去，再說說自己想要透過這次的機會更好的了解資訊圈，結果就很幸運的上了www。
Day 0 因為不想Day 1早起趕去桃園火車站坐火車，所以Day 0就跟同學先過去海大了。
因為報到時間最晚到9點，所以我就提議去逛個基隆廟口夜市，順便吃個晚餐。因為不知道火車站可以寄放行李，所以我跟同學就拖著行李逛了一個半小時的廟口夜市，吃了天婦羅、蚵仔煎、三鮮羹還有三兄弟豆花（這個吃最飽www）。
搭公車去海大的時候，直接被站牌戳一波，同一個站竟然有兩個站牌???，直接看著兩班車開過去QQ。
大概晚上八點到達海大，房間已經有兩個室友了，因為跟他們超級不熟，所以Day 0在房間都沒有在講話，有夠尷尬的QQ。
不得不說海大宿舍的衛浴真的超級新，跟房間差有夠多，合理推測應該是有整修過。
Day 1 Day 1早上就是報到和破冰，還有各種處罰QQ，我和另一個隊員因為打輸德國蟑螂，所以被處罰在全部人面前跟他互喊「喔，我的羅密歐」、「喔，我的茱麗葉」，有夠羞恥的，第一次參加營隊第一天就那麼刺激的。
下午就是基礎的Python語法，之前因為已經有接觸過Python了，所以課程還蠻間單的。因為不想上課太無聊，所以就打打共筆，順便複習語法。不得不說這上課的速度真的有點嚇到我，要不是有點基礎，我大概會直接躺在地上陣亡ㄅ。
晚上繼續上Python，速度還是一樣恐怖，怕爆。
Day 2 早上吃完早餐後，直接讓我們比賽telegram上的遊戲，一開始以為會前三，結果最後直接被虐爆，最後好像才第六名吧QQ。
遊戲玩完後，上的是網路、HTTP、RESTful 的基礎觀念，之前有看過有關網路的維基百科條目，但沒有系統性的了解過。這堂課用ncat跟Wireshark讓我們了解網路的運作原理，我覺得超棒！！！
午餐吃完後，是splitline大大的課，大大講解了一些資訊安全的基本觀念，讓我這個對資安一點概念的人有了一些基本的觀念。
接著繼續上Python的語法，好像是上函數，反正上的一樣還是很快。晚上原本是神秘活動的，但因為Day 3放颱風假，沒辦法到電腦教室上課，所以就把Day 3早上的package management、pip &amp;amp; requests、handle json data跟神秘活動互調，變得下午和整個晚上都在上Python，大家都快累死了QQ。
至於黑客松的主題也在Day 2討論出來了，反正就是一個Ubike路徑規劃機器人，我自己覺得蠻實用的。
Day 3 因為Day 3放颱風假，所以Day 3十點起來就好，這真的超爽，因為前幾天都要7點起來。多睡三個小時真的差很多，早上起來精神超好的。
Day 3早上的神秘活動是把全部人關在小房間裡，然後解謎，解完四個謎題就可以玩類似知識王的小遊戲，不過裡面都是資訊題拉，但bug有點小多，甚至有一題有兩個選項是一模一樣的，但只有一個選項是對的，可悲的是我們每次都選錯 = =
接著又被關在另外一個小房間吃午餐＋討論黑客松，討論的時間其實好像都在裝oh my zsh和稍微教一下Github要怎麼用（？）
下午也是神秘活動，其實就是RPG拉，裡面有些關還蠻有趣的，特別是git的那個。我要來抱怨拼QR Code的那關，那個剪的也太碎，而且為什麼我們這小有3塊拉 = =
晚上因為風雨其實蠻小的，所以就跑回電腦教室上telegram bot的課程了，我們這次是使用python-telegram-bot這個Python Library。課程就介紹一下python-telegram-bot的語法，跟怎麼跟BotFather申請機器人。因為發覺我們機器人要做出來好像會有點小趕，所以我大概花了一個小時就把後面的投影片看了一下，把講師的練習做一做，就直接開始試做了。但因為那時候連後端都還沒開始寫，所以只是先熟悉一下library的語法和研究一下webhook(到最後還是沒用)。
Day 4 早上是社群闖關，我去PyCon的攤位靠回答一題水題（？）拿了一件PyCOn 2017的衣服（那件衣服真的好看），又去GDP的攤位靠Kahoot又拿了一件TensorFlow的衣服，可是那件是XL的，有點太大了QQ。
裡面也有很多很有趣的社群，像Mozilla是推廣一個叫Common Voice的計劃，就是收集志願者的聲音，讓機器可以學會真人說話的專案，讓你可以很方便的就對社會做出貢獻（？），我自己是覺得還蠻有意義的。
下午是資訊大神的見面會，我選擇了PCMan和Birdman（其實是因為聽過PCMan，而且覺得他很神奇才選這場的）。
PCMan以前是榮總的風濕免疫科的主治醫生，因為聯考前發現自己對資訊有興趣，但因為覺得可以先走醫學看看，所以就跑去陽明醫了，後來就一直在醫學界了。後來當了主治醫生好幾年後，發現自己還是沒有對醫學那麼的感興趣，所以就跑去台大念資工研究所了，現在在Appier任職資深工程師。
Birdman則是一位已經創立三家公司的創業家，前兩家的公司都被外商公司收購了，現在第三家公司：奧義智慧，則專注在資安方面。他主要分享一些他作為老闆的一些看法及想法。
晚上就是黑客松時間 aka 瘋狂寫code時間，我和另外一位同學負責後端，我做PTX的部份，他做Google Maps，我的工作就是將Ubike站點的資料包裝成一個容易使用的函數，和把整個後端整合起來。這邊可以提一下，我們機器人有一個部份是搜尋最近的站點ㄇ，那個部份我是用爆搜的，因為分析了一下全台站點數並沒有很多(1747)，用經緯度算距離也不是一件很難的事情。最後證明我是對的，整個爆搜的時間小到可以忽略。後端整個做完大概花了我和另一個隊員一個半小時ㄅ，正當我們以為今天晚上不用熬夜的時候，我們發現前端的分工似乎有點問題，進度有點緩慢，所以我就莫名其妙跳到前端了，後來直接熬夜把整個程式在8個小時硬幹出來(python-telegram-bot那個Handler真的很煩，沒把它remove掉竟然會衝突= =)</description></item><item><title>第一個Telegram Bot:@BikeAnywhereBot</title><link>https://blog.jayinnn.dev/posts/ubikeanywherebot/</link><pubDate>Thu, 22 Aug 2019 00:00:00 +0000</pubDate><guid>https://blog.jayinnn.dev/posts/ubikeanywherebot/</guid><description>Github Repo: https://github.com/jayin92/UBikeAnywhereBot
動機 我自己有時候到外縣市遊玩或參加各種活動的時候，常常會使用Ubike當作交通工具，但因為不熟當地的地形和Ubike站點的位置，常常會需要用手機在瀏覽器和地圖之間瘋狂切換才能找到正確的站點及正確的路線，讓我十分困擾。而且在騎乘自行車時做出上述的動作更是十分危險。所以當時在SITCON夏令營時，就覺得這個需求其實蠻迫切的，所以就決定我們黑客松的主題。
介紹 這個Telegram Bot是我在SITCON夏令營做的一個Ubike站點路徑規劃機器人，這個機器人主要可以幫你找到離出發地和目的地最近且可用的兩個Ubike站點，並且回傳導航路線給用戶，也同時會傳送給用戶那兩個站點目前的車輛數和空位數。
Telegram ? Telegram是一個跨平台的即時通訊軟體，它的用戶端是自由及開放原始碼軟體，但是它的伺服器是專有軟體。使用者可以相互交換加密與自毀訊息，傳送相片、影片等所有類型檔案。官方提供手機版（Android、iOS、Windows Phone）、電腦版（Windows、macOS、Linux）和網頁版等多種平台用戶端；同時官方開放應用程式介面，因此擁有許多第三方的用戶端可供選擇，其中多款內建中文。 From Wikipedia
Telegram 就是一個通訊軟體，但功能十分強大，不管是高達1.5GB的最大檔案上傳大小、優秀的群組管理功能、端對端的加密、所有聊天資料雲端備份（就不會出現某通訊軟體，換手機聊天紀錄全部消失的問題）、多設備同時登入等等…
而且更重要的是，我們可以利用官方所提供的API來建立我們自己的機器人，更棒的是，網路上已經有可以直接使用的Python Library：https://github.com/python-telegram-bot/python-telegram-bot，這讓開發的過程更加容易。
使用 安裝Telegram後，可以利用以下網址使用我們的機器人 https://t.me/bikeanywherebot
Bot 首先會詢問使用者的出發地及目的地（支援模糊搜尋），並利用政府所提供的PTX API取的全台Ubike站點名稱、經緯度、已停車輛、空位，再利用經緯度及已停車輛或空位算出與出發地和目的地可用且最近的Ubike站點，在將這四個位置輸入Google Maps的導航，就完成了一次操作。
更詳細的說明也可以參考我們的簡報：https://docs.google.com/presentation/d/1lNG2SYwuUna-86FPnBUql_JN1xgufkv2j6Hai_BKe2E/edit
Library 我們在這個專案主要用了下面幾個library:
telegram (就是python-telegram-bot) requests 抓api的資料 json 將json檔變成Python原生的字典 configparser 讀取config.ini API 我們在這個project主要用到了兩個API，一個是Google的Firebase，用來生成Dynamic Link。還有一個是政府的PTX(Public Transport Data eXchange)平台，用來查詢Ubike的站點位置，即時的車輛數等等…
我們一開始並沒有找到PTX這個整合性的平台，而是先找到了各縣市的Ubike開放資料，而且並不是每個縣市的資料開放平台都有Ubike的資料。這讓我們很困擾，因為我們要花很多時間處理各個縣市不統一的資料形式，而且還要申請不同縣市資料平台的API Key。但幸好後來有一位小隊員找到政府的PTX平台，上面有所有擁有公共自行車站點的縣市的資料，而且只需要一個API Key，這讓資料的取得相當的方便。
我們的導航網址是利用網址分析的方式產出的，格式大概長這樣： https://www.google.com/maps/dir/?api=1&amp;amp;origin=海洋大學&amp;amp;destination=臺灣大學&amp;amp;waypoints=臺北動物園|臺北101&amp;amp;travelmode=driving
origin: 起點 (可以是座標、地點名稱、Google的placeID) destination: 終點 (可以是座標、地點名稱、Google的placeID) waypoints: 中途點 (格式與上面相同，中途點間用|分隔) travelmode: 導航模式 (driving, walking, motorcycling, etc&amp;hellip;) 所以上面那段網址點進去後，會出現Google Maps的導航畫面，路線是 海洋大學 → 臺北動物園 → 臺北101 → 臺灣大學 而導航模式是開車。 可以發現，這串網址如果直接發給用戶會相當的難看，而且並不會直接導向到Google Maps的APP，當我試著用各家的縮網址服務時，隊友找到了一個叫Dynamic Link的東西。Dynamic Link是一個由Google Firebase提供的服務，它不僅可以縮網址，而且網址的域名還是自訂的(https://bikeanywhere.</description></item><item><title>P vs NP</title><link>https://blog.jayinnn.dev/posts/p-vs-np/</link><pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate><guid>https://blog.jayinnn.dev/posts/p-vs-np/</guid><description>前言 這篇其實是為了資訊讀書會打的，打完之後發現可以充文章數，所以就把它打進來了。
這篇主要介紹P, NP, NP Complete 和 NP Hard。還有一些已經被證明是NP Complete 的問題。
時間複雜度 就是一個函數，描述一個演算法的執行時間。
簡單來說，假設有一個演算法，你給這個演算法一個大小為n的輸入，它最多要 $6n^3+5n^2+2n+1$ 的時間才能執行完畢，我們就說這個演算法的時間複雜度是$O(n^3)$，這個$O()$我們稱作大O符號 (Big O notation)，又叫做漸進符號，它是用另一個（通常更簡單的）函式來描述一個函式數量級的漸近上界。
還有一個東西叫做最壞時間複雜度(Worst-case complexity)記作 $T(n)$
排序演算法的其中一種：插入排序(insertion sort)的時間複雜度是$O(n^2)$，下面是插入排序的Python 程式，為什麼這個演算法的是$O(n^2)$嗎？
def insertionSort(arr): # Traverse through 1 to len(arr) for i in range(1, len(arr)): key = arr[i] # Move elements of arr[0...i-1], while j &amp;gt;= 0 and key &amp;lt; arr[j] : arr[j+1] = arr[j] j -= 1 arr[j+1] = key 我們今天不會提到太多的排序演算法，因為我們的主題是P vs NP。
P P 代表的是 Polynomial (多項式)，若有一個問題可以在多項式時間(polynomial time)複雜度 ($O(1), O(\log n), O(n^2), O(n \log n), O(n^3), O(n^4)$&amp;hellip;皆為多項式時間複雜度)解決，則我們說此問題為P類問題。</description></item><item><title>萬有引力定律 vs 庫侖定律</title><link>https://blog.jayinnn.dev/posts/law-of-universal-gravitation-vs-coulombs-law/</link><pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate><guid>https://blog.jayinnn.dev/posts/law-of-universal-gravitation-vs-coulombs-law/</guid><description>引言 萬有引力定律和庫侖定律分別是力學及電學中重要的定律，我們都知道萬有引力定律是由牛頓歸納出的，而庫侖定律顯然就是由庫侖。萬有引力定律的發表時間約早庫侖定律100年，且這兩條定律都與平方反比定律有關，這篇網誌主要描述這兩條定律，及為了驗證這兩條定律而發展出的實驗。
萬有引力定律 萬有引力定律是由牛頓於1687年出版的《自然哲學的數學原理》首次發表的，他描述了任兩物體之間都會有吸引力，且此吸引力正比於此兩物體質量乘積，反比於兩物體距離平方。
此定律是由牛頓之歸納推理的經驗觀察得出的一般物理規律，若萬有引力定律不是現在這個形式，則太陽系上的行星就不會以橢圓軌道運行了。
但知道其正比關係對實際的計算可說一點用也沒有，因為我們並不能計算出實際的數值，我們需要測量出一個常數，使我們能夠定量的計算出兩物體之間的作用力。
這個常數現在稱為萬有引力常數，代號為G，最早是由物理學及化學家卡文迪西於1797年間接測量出來。
卡文迪西扭秤實驗 卡文迪西被稱作牛頓之後最偉大的科學家之一，因其首次發現庫侖定律及歐姆定律(但都沒有公布)，且精確的測量了地球的密度(透過這個實驗我們可以間接算出萬有引力常數G)。
卡文迪西扭秤實驗 卡文迪西是透過一個稱作扭秤的實驗工具，其構造大概長這樣，由兩顆大球、兩顆小球、一條已知扭轉係數的絲線、光源及精準的游標尺所組成的。
因為萬有引力，所以大小球之間就會有一個吸引力，而這個吸引力就會對中間的絲線產生一個力矩，使絲線扭轉，因為絲線本身被扭轉的時候也會產生一個力矩，這個力矩的大小就是此時扭轉的角度乘上此絲線的扭轉係數。直到某個角度時，絲線產生的力矩剛好與萬有引力產生的力矩相等時，木棒就會停止轉動，這時只要測量絲線扭轉的角度，就可以知道萬有引力產生的力矩，進而反推吸引力，我們就可以透過這個數值測量出地球的重量，且因為當時的人已經知道地球的半徑，所以也可以推出密度。
後人用卡文迪西的數據反推萬有引力常數，發現其數值與2014年的數據差距不到1%，可以說是相當精準。
庫侖定律 庫侖定律是由法國物理學家查爾斯·庫侖於1785年發現，其指出了空間中兩個靜止的點電荷，其交互作用力與電量乘積成正比，與其距離平方成反比。
不難發現其形式與牛頓的萬有引力定律形式幾乎相等。
其實在1770年代早期，卡文迪西就利用巧秒的實驗得出了帶電體之間的作用力依賴於帶電量與距離，並得出靜電力與距離的$2\pm \frac{1}{50}$次方成反比，只是卡文迪什沒有公布這個結果。
後來庫侖在1785年使用庫侖扭秤，發現兩點電荷之間的交互作用力也是平方反比定律。
庫侖扭秤 庫侖扭秤（torsion balance）示意圖。庫侖使用扭秤來測量兩個點電荷彼此互相作用的靜電力，因此發現庫侖定律。 庫侖使用庫侖扭秤測量兩點電荷之間的作用力，因而發現庫侖定律。
其原理與卡文迪西的扭秤差不多，在此不再贅述</description></item><item><title>在科學班的一年─2018/6~2019/8的回顧</title><link>https://blog.jayinnn.dev/posts/first-year-in-science-class/</link><pubDate>Mon, 19 Aug 2019 00:00:00 +0000</pubDate><guid>https://blog.jayinnn.dev/posts/first-year-in-science-class/</guid><description>前言 這個部落格自從我開始升上高中後就沒什麼在維護了，第一是因為課業有點小重，第二是因為維護還蠻麻煩的，一篇文章的產出基本上都要花我不少時間，自己又把空閒的時間花在打LoL上，自然沒有時間將自己的知識描述成文章。
在高中的這一年基本上學了蠻多東西，思考了很多東西，也放棄了很多東西。
這篇文基本上應該會蠻長的，因為我會把這一年發生的事情全部紀錄一遍，從一開始科學班的暑輔，到今年暑假參加的SITCON，COSCUP。所以我猜我在暑假前可能打不完，到時候開學如果有時間再把這篇文打完ㄅ。
科學班小高一與他們的暑輔 我們大概比一般高一生多上了兩個禮拜的課ㄅ，上的課都是學科，國文、英文、物理、化學、生物、數學之類的，雖然已經過了蠻久但我還記得那個課表還蠻不優的，連四節化學，連四節數學都算家常便飯，每個禮拜至少會出現2次還3次吧，不過令人慶幸的是只上六節。
我還記得第一天上學時，我只認識一個國中就認識的振聲仔：鄧朝語，然後我到的時候他還沒來，所以我就想說我坐前面一點但不要太中間，所以就選擇做第一排第二個位置。結果後來發現從國中就是電神且眾人皆知的大電神張智閎坐我旁邊，真的有夠扯的拉，可是他那時候根本不認識我，因為我超級無敵不電，根本沒參加過什麼數學競賽或自然方面的競賽（我有去考科奧但初選就被刷掉了QQ）（我那時候考科奧張智閎就坐我旁邊）阿因為大家一開始根本不熟，所以大家吃飯阿，午休之類的都沒什麼交集，大家午休不是在睡覺就是在刷森森數學講義，想當年我也是其中刷講義大隊的其中一員呢嘻嘻。
阿後來就莫名奇妙突然熟起來（好像有個過程拉，不過根本沒人可以記的那麼清楚拉）。
後來暑輔有一天，張智閎就突然跟我說：「ㄟ杰穎，你好像熊熊喔，一隻坐著的熊熊」，剛好我的Facebook大頭貼也是熊熊，所以後來就被全班的人叫熊熊了。
暑輔有一天下午，國文老師帶著我們全班去大溪參觀街角博物館，那是我們班第一次團體去外面參觀，大家都還蠻興奮的，博物館本身好像沒什麼，我覺得比較好玩的是你要拿著你的手機到大溪各個景點實際的「打卡」（我知道用打卡這個詞很蠢）很悲慘的是我和張智閎抽到了超雷的路線：有一個打卡的點在李梅芳古厝，古厝離我們的出發點走路至少要20分鐘，而且那邊還沒有Ubike可以騎，有夠慘，但我們還是走到了，那段路程，成為了暑輔最美好的回憶。
暑輔結束後，就是給小高一們的新生訓練了，一般來說，小高一們第一次見到同學是在新生訓練那三天，所以會超級不熟＋尷尬，但因為我們班已經上課上了四個禮拜，所以我們在新生訓練那三天超級吵，但後來好像就沒什麼存在感了QQ。
還有一件蠻值得提的就是我們暑輔後來熟到直接帶Nintendo Switch來學校，感謝丁安磊同學的友情贊助www (不過後來開學後就被班導強制撤離了QQ)
被荼毒的開始 武陵在開學那天都會考一個叫始業考的無意義考試，考試的成績算在平時考，所以其實基本上不用太認真準備，但其實大家都還是會稍微看一下拉。總而言之，我們的數學老師是全武陵都聞風喪膽的森森，他為普通班所出的段考考卷，基本上全校平均都只有30、40分。顯然我們的始業考數學考卷也是他出的，所以很顯然爆幹難，我跟朝語好像都只有20分左右ㄅ，反正考完就覺得完蛋了，這三年要被荼毒到死了，的確，森森出的考卷我從來沒有拿到好分數過QQ。
高一的第一個大活動是去中興大學參加彰中科學班的成發（彰中的合作大學是中興，結果中一中是跟交通大學），因為桃園離台中有點遠，所以大家就在遊覽車上面用小海螺（對，那時候小海螺還是很盛行）自己放音樂、唱歌，超high，我還記得丁安磊瘋狂唱日文歌嘻嘻。
我們到中興的時候，離成發開始還有一段時間，班導就放我們自己去中興外面吃東西，還記得那時候一堆人都跑去吃微波垃圾，我就堅持不要，跟一群人走了超久，走到都已經快沒時間吃午餐了，才在一家關東煮店停下來，雖然關東煮不用什麼處理時間，但剛上桌的時候真D燙，根本沒辦法吃，我們大概等五分鐘之後才能開吃，然後我因為太興奮不小心裝了太多，根本吃不完，最後好像離成發開始前五分鐘才離開餐廳，因為超怕遲到被關在外面，所以直接用衝的衝回去國際會議聽，還好成發後來很久才開始（久到我們都在打橋牌了）也就沒有被鎖在外面了。
園遊會 園遊會應該高一上學期最大的活動了，我們從一開始的討論、試做、買材料、設計logo、宣傳、畫海報、設計流程全部都是我們自己來，最原版的logo是我設計的，但有點小醜，所以美宣組的洪嘉聲就自己用小畫家用了比我用Ai做的好看50倍的logo QQ
我們班後來決定做鬆餅，而且不是一般的鬆餅，而是可以客製化的鬆餅，這樣做雖然很酷，但因為有大量客製化的過程，所以一個鬆餅要做非常、非常久，再加上我們是現點現做，到後來做一個鬆餅客人平均要等6、7分鐘，導致營業額沒有到那麼好，不過我覺得園遊會的重點不是營業額的多寡，而是準備的過程、辦園遊會的經驗等等。
&amp;hellip;
高三後記 笑死，我已經忘光高一想要打甚麼了，但前面似乎頗有趣，我就把他公開吧。</description></item><item><title>有關謝爾賓斯基三角形 aka Sierpinski triangle</title><link>https://blog.jayinnn.dev/posts/sierpinski-triangle/</link><pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate><guid>https://blog.jayinnn.dev/posts/sierpinski-triangle/</guid><description>介紹 在上一篇文章中，我們知道Barnsley Fern與這次介紹的謝爾賓斯基三角形都是碎形。
照慣例(XD)我們再次引用Wikipedia的內容
謝爾賓斯基三角形（英語：Sierpinski triangle）是一種碎形，由波蘭數學家謝爾賓斯基在1915年提出。它是自相似集的例子。From Wikipedia
我們這次所介紹的繪圖方法，維基百科把它稱作Chaos Game。也就是隨機的方法。
主要的方法如下:
隨便畫個三角形(原始的謝爾賓斯基三角形為正三角形) 在三角形內部隨便找一個點P 從三角形三個頂點隨機找一個頂點 點出點P跟選定的頂點的中點 把那個中點當作新的點P 重複3. 以下是執行的結果
可以很清楚的看到這個圖形是用點點出來的
程式碼介紹 這次的程式簡單到可以直接全部貼上來
# import package import turtle import random import math random.seed() # 定義三角形三頂點 pointa = (0,400) pointb = (-650,-300) pointc = (650,-300) point = [pointa, pointb, pointc] # 定義第一個點(若這個點為隨機產出一樣對產出三角形完全沒有影響) firstpoint = (-200,250) # 定義繪點函數(傳入tuple) def drawdot(point, color=&amp;#39;black&amp;#39;): turtle.penup() turtle.goto(point[0],point[1]) turtle.pendown() turtle.dot(2, color) # 傳入兩個點(tuple)回傳兩點中點座標(tuple) def gohalf(point1,point2): point = ((point1[0] + point2[0]) / 2, ((point1[1] + point2[1]) / 2)) return point # turtle package init turtle.</description></item><item><title>有關 Barnsley Fern</title><link>https://blog.jayinnn.dev/posts/barnsley-fern/</link><pubDate>Mon, 07 May 2018 00:00:00 +0000</pubDate><guid>https://blog.jayinnn.dev/posts/barnsley-fern/</guid><description>前言 Barnsley Fern 引用英文版Wikipedia對Barnsley Fern的介紹:
The Barnsley fern is a fractal named after the British mathematician Michael Barnsley who first described it in his book Fractals Everywhere. From Wikipedia
翻譯成中文大概就是: &amp;ldquo;Barnsley Fern 是一個由一位英國數學家 Michael Barnsley 在他所寫的書 Fractals Everywhere 中所描述的一種碎形&amp;rdquo;
那甚麼是碎形呢? 我們再次引用Wikipedia，不過這次是中文版(我懶得翻譯阿)
碎形（英語：Fractal），又稱分形、殘形，通常被定義為「一個粗糙或零碎的幾何形狀，可以分成數個部分，且每一部分都（至少近似地）是整體縮小後的形狀」，即具有自相似的性質。From Wikipedia
有名的碎形有科赫雪花與謝爾賓斯基三角形，有關謝爾賓斯基三角形可以參考部落格的另外一篇文章 https://jayin92.github.io/posts/sierpinski-triangle/
科赫雪花 謝爾賓斯基三角形 我們可以很容易的看到說不管你把一個碎形放大多少倍，它所呈現的圖形會跟原本一模一樣，這就是碎形自相似的性質。
不過我們今天不會太深入去講碎形，因為其實我也不太會😭
Barnsley Fern 介紹 其實Barnsley Fern的描繪過程可以由下面方程組 (Transmotions functions &amp;ldquo;變換函數?&amp;rdquo;) 決定:
其中$P()$代表此方程式在此方程組的發生機率
而$f_1$主要生成Barnsley Fern中的梗的部分
$f_2$為小的散葉
$f_3$為左邊的葉子
$f_4$為右邊的葉子
利用Python內建的Turtle庫畫出Barnsley Fern 不過在電腦科學裡，我們可以利用迭代(遞迴)的方式來繪出Barnsley Fern
所以我們可以利用python寫出上面四個方程式 (函數傳入值及回傳值皆為tuple)</description></item><item><title>證明巴斯卡定理</title><link>https://blog.jayinnn.dev/posts/pascal-theorem/</link><pubDate>Sat, 05 May 2018 00:00:00 +0000</pubDate><guid>https://blog.jayinnn.dev/posts/pascal-theorem/</guid><description>介紹 大家都知道巴斯卡公式是排列組合中一個十分有用的公式，都叫做巴斯卡公式了，可想而知一定跟巴斯卡三角形有關係
其實巴斯卡三角形也可以被寫成以下形式： 巴斯卡三角形&amp;lt;組合形式&amp;gt; 大家都知道巴斯卡三角形有以下性質:
巴斯卡三角形的性質 於是我們可以利用巴斯卡三角形推導出以下等式:
$$\begin{equation}C_{k}^{n+1} = C_{k-1}^{n}+C_{k}^{n}\end{equation}$$ 舉個例子來說的話就是:
$$C_{5}^{10} = C_{4}^{9}+C_{5}^{9}$$
這個例子可以上面的巴斯卡三角形的組合形式中找到
從結果推導出的證明 組合的定義: $$C_{k}^{n} = \frac{n!}{k!(n-k)!}$$
故(1)可改寫為:
$$\begin{equation}\frac{(n+1)!}{k!(n-k+1)!}=\frac{n!}{(k-1)!(n-k+1)!}+\frac{n!}{k!(n-k)!}\end{equation}$$
開始推導:
$$\frac{(n+1)!}{k!(n-k+1)!}=\frac{n!}{(k-1)!(n-k+1)!}+\frac{n!}{k!(n-k)!}$$ $$(n+1)!=\frac{n!k!}{(k-1)!}+\frac{n!(n-k+1)!}{(n-k)!}$$ $$\frac{(n+1)!}{n!}=\frac{k!}{(k-1)!}+\frac{(n-k+1)!}{(n-k)!}$$ $$n+1=\frac{k!}{(k-1)!}+\frac{(n-k+1)!}{(n-k)!}$$ $$n+1=k+\frac{(n-k)!(n-k+1)}{(n-k)!}$$ $$n+1=k+(n-k+1)$$ $$n+1=n+1$$
等號兩邊相等，故巴斯卡公式成立。
但是我認為這個證法不夠精確，我已經先假設巴斯卡公式成立再去證明它的確成立，正確的證法應該要從源頭來下手。
從源頭推導出巴斯卡公式 我認為這個證明有點曲折，希望有更好的證法
$$原式=C_{k-1}^{n}+C_{k}^{n}$$ $$=\frac{n!}{(k-1)!(n-k+1)!}+\frac{n!}{k!(n-k)!}$$ $$=\frac{n!}{\frac{k!}{k}(n-k)!(n-k+1)}+\frac{n!}{k!(n-k)!}$$ $$=\frac{n!k}{k!(n-k)!(n-k+1)}+\frac{n!}{k!(n-k)!}$$ $$=\frac{n!}{k!(n-k)!}(\frac{k}{n-k+1}+1)$$ $$=\frac{n!}{k!(n-k)!}(\frac{k+(n-k+1)}{n-k+1})$$ $$=\frac{n!}{k!(n-k)!}(\frac{n+1}{n-k+1})$$ $$=\frac{n!(n+1)}{k!(n-k)!(n-k+1)}$$ $$=\frac{(n+1)!}{k!((n+1)-k)!}$$ $$=C_{k}^{n+1}$$</description></item></channel></rss>